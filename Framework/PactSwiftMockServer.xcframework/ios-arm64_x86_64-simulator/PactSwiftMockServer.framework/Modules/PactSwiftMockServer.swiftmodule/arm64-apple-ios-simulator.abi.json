{
  "ABIRoot": {
    "kind": "Root",
    "name": "TopLevel",
    "printedName": "TopLevel",
    "children": [
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "ProviderVerificationError",
        "printedName": "ProviderVerificationError",
        "children": [
          {
            "kind": "Var",
            "name": "verificationFailed",
            "printedName": "verificationFailed",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.ProviderVerificationError.Type) -> PactSwiftMockServer.ProviderVerificationError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProviderVerificationError",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError",
                    "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProviderVerificationError",
                        "printedName": "PactSwiftMockServer.ProviderVerificationError",
                        "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO18verificationFailedyA2CmF",
            "mangledName": "$s19PactSwiftMockServer25ProviderVerificationErrorO18verificationFailedyA2CmF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "nullPointer",
            "printedName": "nullPointer",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.ProviderVerificationError.Type) -> PactSwiftMockServer.ProviderVerificationError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProviderVerificationError",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError",
                    "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProviderVerificationError",
                        "printedName": "PactSwiftMockServer.ProviderVerificationError",
                        "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO11nullPointeryA2CmF",
            "mangledName": "$s19PactSwiftMockServer25ProviderVerificationErrorO11nullPointeryA2CmF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "methodPanicked",
            "printedName": "methodPanicked",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.ProviderVerificationError.Type) -> PactSwiftMockServer.ProviderVerificationError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProviderVerificationError",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError",
                    "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProviderVerificationError",
                        "printedName": "PactSwiftMockServer.ProviderVerificationError",
                        "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO14methodPanickedyA2CmF",
            "mangledName": "$s19PactSwiftMockServer25ProviderVerificationErrorO14methodPanickedyA2CmF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "invalidArguments",
            "printedName": "invalidArguments",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.ProviderVerificationError.Type) -> PactSwiftMockServer.ProviderVerificationError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProviderVerificationError",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError",
                    "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProviderVerificationError",
                        "printedName": "PactSwiftMockServer.ProviderVerificationError",
                        "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO16invalidArgumentsyA2CmF",
            "mangledName": "$s19PactSwiftMockServer25ProviderVerificationErrorO16invalidArgumentsyA2CmF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "usageError",
            "printedName": "usageError",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.ProviderVerificationError.Type) -> (Swift.String) -> PactSwiftMockServer.ProviderVerificationError",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.String) -> PactSwiftMockServer.ProviderVerificationError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProviderVerificationError",
                        "printedName": "PactSwiftMockServer.ProviderVerificationError",
                        "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProviderVerificationError",
                        "printedName": "PactSwiftMockServer.ProviderVerificationError",
                        "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO05usageG0yACSScACmF",
            "mangledName": "$s19PactSwiftMockServer25ProviderVerificationErrorO05usageG0yACSScACmF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "unknown",
            "printedName": "unknown",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.ProviderVerificationError.Type) -> PactSwiftMockServer.ProviderVerificationError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "ProviderVerificationError",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError",
                    "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "ProviderVerificationError",
                        "printedName": "PactSwiftMockServer.ProviderVerificationError",
                        "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO7unknownyA2CmF",
            "mangledName": "$s19PactSwiftMockServer25ProviderVerificationErrorO7unknownyA2CmF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "RawDocComment"
            ]
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO11descriptionSSvp",
            "mangledName": "$s19PactSwiftMockServer25ProviderVerificationErrorO11descriptionSSvp",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO11descriptionSSvg",
                "mangledName": "$s19PactSwiftMockServer25ProviderVerificationErrorO11descriptionSSvg",
                "moduleName": "PactSwiftMockServer",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "ProviderVerificationError",
                "printedName": "PactSwiftMockServer.ProviderVerificationError",
                "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
              },
              {
                "kind": "TypeNominal",
                "name": "ProviderVerificationError",
                "printedName": "PactSwiftMockServer.ProviderVerificationError",
                "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
              }
            ],
            "declKind": "Func",
            "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO2eeoiySbAC_ACtFZ",
            "mangledName": "$s19PactSwiftMockServer25ProviderVerificationErrorO2eeoiySbAC_ACtFZ",
            "moduleName": "PactSwiftMockServer",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO",
        "mangledName": "$s19PactSwiftMockServer25ProviderVerificationErrorO",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Error",
            "printedName": "Error",
            "usr": "s:s5ErrorP",
            "mangledName": "$ss5ErrorP"
          },
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "MockServerError",
        "printedName": "MockServerError",
        "children": [
          {
            "kind": "Var",
            "name": "invalidPactJSON",
            "printedName": "invalidPactJSON",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.MockServerError.Type) -> PactSwiftMockServer.MockServerError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MockServerError",
                    "printedName": "PactSwiftMockServer.MockServerError",
                    "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.MockServerError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MockServerError",
                        "printedName": "PactSwiftMockServer.MockServerError",
                        "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO07invalidA4JSONyA2CmF",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO07invalidA4JSONyA2CmF",
            "moduleName": "PactSwiftMockServer"
          },
          {
            "kind": "Var",
            "name": "invalidSocketAddress",
            "printedName": "invalidSocketAddress",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.MockServerError.Type) -> PactSwiftMockServer.MockServerError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MockServerError",
                    "printedName": "PactSwiftMockServer.MockServerError",
                    "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.MockServerError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MockServerError",
                        "printedName": "PactSwiftMockServer.MockServerError",
                        "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO20invalidSocketAddressyA2CmF",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO20invalidSocketAddressyA2CmF",
            "moduleName": "PactSwiftMockServer"
          },
          {
            "kind": "Var",
            "name": "failedToStart",
            "printedName": "failedToStart",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.MockServerError.Type) -> PactSwiftMockServer.MockServerError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MockServerError",
                    "printedName": "PactSwiftMockServer.MockServerError",
                    "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.MockServerError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MockServerError",
                        "printedName": "PactSwiftMockServer.MockServerError",
                        "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO13failedToStartyA2CmF",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO13failedToStartyA2CmF",
            "moduleName": "PactSwiftMockServer"
          },
          {
            "kind": "Var",
            "name": "failedToWriteFile",
            "printedName": "failedToWriteFile",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.MockServerError.Type) -> PactSwiftMockServer.MockServerError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MockServerError",
                    "printedName": "PactSwiftMockServer.MockServerError",
                    "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.MockServerError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MockServerError",
                        "printedName": "PactSwiftMockServer.MockServerError",
                        "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO17failedToWriteFileyA2CmF",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO17failedToWriteFileyA2CmF",
            "moduleName": "PactSwiftMockServer"
          },
          {
            "kind": "Var",
            "name": "methodPanicked",
            "printedName": "methodPanicked",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.MockServerError.Type) -> PactSwiftMockServer.MockServerError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MockServerError",
                    "printedName": "PactSwiftMockServer.MockServerError",
                    "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.MockServerError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MockServerError",
                        "printedName": "PactSwiftMockServer.MockServerError",
                        "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO14methodPanickedyA2CmF",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO14methodPanickedyA2CmF",
            "moduleName": "PactSwiftMockServer"
          },
          {
            "kind": "Var",
            "name": "nullPointer",
            "printedName": "nullPointer",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.MockServerError.Type) -> PactSwiftMockServer.MockServerError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MockServerError",
                    "printedName": "PactSwiftMockServer.MockServerError",
                    "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.MockServerError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MockServerError",
                        "printedName": "PactSwiftMockServer.MockServerError",
                        "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO11nullPointeryA2CmF",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO11nullPointeryA2CmF",
            "moduleName": "PactSwiftMockServer"
          },
          {
            "kind": "Var",
            "name": "portNotFound",
            "printedName": "portNotFound",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.MockServerError.Type) -> PactSwiftMockServer.MockServerError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MockServerError",
                    "printedName": "PactSwiftMockServer.MockServerError",
                    "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.MockServerError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MockServerError",
                        "printedName": "PactSwiftMockServer.MockServerError",
                        "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO12portNotFoundyA2CmF",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO12portNotFoundyA2CmF",
            "moduleName": "PactSwiftMockServer"
          },
          {
            "kind": "Var",
            "name": "tlsConfigurationFailed",
            "printedName": "tlsConfigurationFailed",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.MockServerError.Type) -> PactSwiftMockServer.MockServerError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MockServerError",
                    "printedName": "PactSwiftMockServer.MockServerError",
                    "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.MockServerError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MockServerError",
                        "printedName": "PactSwiftMockServer.MockServerError",
                        "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO22tlsConfigurationFailedyA2CmF",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO22tlsConfigurationFailedyA2CmF",
            "moduleName": "PactSwiftMockServer"
          },
          {
            "kind": "Var",
            "name": "validationFaliure",
            "printedName": "validationFaliure",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.MockServerError.Type) -> PactSwiftMockServer.MockServerError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MockServerError",
                    "printedName": "PactSwiftMockServer.MockServerError",
                    "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.MockServerError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MockServerError",
                        "printedName": "PactSwiftMockServer.MockServerError",
                        "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO17validationFaliureyA2CmF",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO17validationFaliureyA2CmF",
            "moduleName": "PactSwiftMockServer"
          },
          {
            "kind": "Var",
            "name": "unknown",
            "printedName": "unknown",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.MockServerError.Type) -> PactSwiftMockServer.MockServerError",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "MockServerError",
                    "printedName": "PactSwiftMockServer.MockServerError",
                    "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.MockServerError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "MockServerError",
                        "printedName": "PactSwiftMockServer.MockServerError",
                        "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO7unknownyA2CmF",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO7unknownyA2CmF",
            "moduleName": "PactSwiftMockServer"
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO11descriptionSSvp",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO11descriptionSSvp",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:19PactSwiftMockServer0cD5ErrorO11descriptionSSvg",
                "mangledName": "$s19PactSwiftMockServer0cD5ErrorO11descriptionSSvg",
                "moduleName": "PactSwiftMockServer",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "==",
            "printedName": "==(_:_:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "usr": "s:Sb"
              },
              {
                "kind": "TypeNominal",
                "name": "MockServerError",
                "printedName": "PactSwiftMockServer.MockServerError",
                "usr": "s:19PactSwiftMockServer0cD5ErrorO"
              },
              {
                "kind": "TypeNominal",
                "name": "MockServerError",
                "printedName": "PactSwiftMockServer.MockServerError",
                "usr": "s:19PactSwiftMockServer0cD5ErrorO"
              }
            ],
            "declKind": "Func",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO2eeoiySbAC_ACtFZ",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO2eeoiySbAC_ACtFZ",
            "moduleName": "PactSwiftMockServer",
            "static": true,
            "implicit": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Var",
            "name": "hashValue",
            "printedName": "hashValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO9hashValueSivp",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO9hashValueSivp",
            "moduleName": "PactSwiftMockServer",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:19PactSwiftMockServer0cD5ErrorO9hashValueSivg",
                "mangledName": "$s19PactSwiftMockServer0cD5ErrorO9hashValueSivg",
                "moduleName": "PactSwiftMockServer",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Function",
            "name": "hash",
            "printedName": "hash(into:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Hasher",
                "printedName": "Swift.Hasher",
                "paramValueOwnership": "InOut",
                "usr": "s:s6HasherV"
              }
            ],
            "declKind": "Func",
            "usr": "s:19PactSwiftMockServer0cD5ErrorO4hash4intoys6HasherVz_tF",
            "mangledName": "$s19PactSwiftMockServer0cD5ErrorO4hash4intoys6HasherVz_tF",
            "moduleName": "PactSwiftMockServer",
            "implicit": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Enum",
        "usr": "s:19PactSwiftMockServer0cD5ErrorO",
        "mangledName": "$s19PactSwiftMockServer0cD5ErrorO",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "Error",
            "printedName": "Error",
            "usr": "s:s5ErrorP",
            "mangledName": "$ss5ErrorP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "TransferProtocol",
        "printedName": "TransferProtocol",
        "children": [
          {
            "kind": "Var",
            "name": "standard",
            "printedName": "standard",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.TransferProtocol.Type) -> PactSwiftMockServer.TransferProtocol",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TransferProtocol",
                    "printedName": "PactSwiftMockServer.TransferProtocol",
                    "usr": "c:@M@PactSwiftMockServer@E@TransferProtocol"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.TransferProtocol.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TransferProtocol",
                        "printedName": "PactSwiftMockServer.TransferProtocol",
                        "usr": "c:@M@PactSwiftMockServer@E@TransferProtocol"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "c:@M@PactSwiftMockServer@E@TransferProtocol@TransferProtocolStandard",
            "mangledName": "$s19PactSwiftMockServer16TransferProtocolO8standardyA2CmF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "ObjC"
            ],
            "fixedbinaryorder": 0
          },
          {
            "kind": "Var",
            "name": "secure",
            "printedName": "secure",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.TransferProtocol.Type) -> PactSwiftMockServer.TransferProtocol",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TransferProtocol",
                    "printedName": "PactSwiftMockServer.TransferProtocol",
                    "usr": "c:@M@PactSwiftMockServer@E@TransferProtocol"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.TransferProtocol.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "TransferProtocol",
                        "printedName": "PactSwiftMockServer.TransferProtocol",
                        "usr": "c:@M@PactSwiftMockServer@E@TransferProtocol"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "c:@M@PactSwiftMockServer@E@TransferProtocol@TransferProtocolSecure",
            "mangledName": "$s19PactSwiftMockServer16TransferProtocolO6secureyA2CmF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "ObjC"
            ],
            "fixedbinaryorder": 1
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(rawValue:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "PactSwiftMockServer.TransferProtocol?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "TransferProtocol",
                    "printedName": "PactSwiftMockServer.TransferProtocol",
                    "usr": "c:@M@PactSwiftMockServer@E@TransferProtocol"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:19PactSwiftMockServer16TransferProtocolO8rawValueACSgSi_tcfc",
            "mangledName": "$s19PactSwiftMockServer16TransferProtocolO8rawValueACSgSi_tcfc",
            "moduleName": "PactSwiftMockServer",
            "implicit": true,
            "init_kind": "Designated"
          },
          {
            "kind": "Var",
            "name": "rawValue",
            "printedName": "rawValue",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Int",
                "printedName": "Swift.Int",
                "usr": "s:Si"
              }
            ],
            "declKind": "Var",
            "usr": "s:19PactSwiftMockServer16TransferProtocolO8rawValueSivp",
            "mangledName": "$s19PactSwiftMockServer16TransferProtocolO8rawValueSivp",
            "moduleName": "PactSwiftMockServer",
            "implicit": true,
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:19PactSwiftMockServer16TransferProtocolO8rawValueSivg",
                "mangledName": "$s19PactSwiftMockServer16TransferProtocolO8rawValueSivg",
                "moduleName": "PactSwiftMockServer",
                "implicit": true,
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Enum",
        "usr": "c:@M@PactSwiftMockServer@E@TransferProtocol",
        "mangledName": "$s19PactSwiftMockServer16TransferProtocolO",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "AccessControl",
          "ObjC",
          "RawDocComment"
        ],
        "enumRawTypeName": "Int",
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Equatable",
            "printedName": "Equatable",
            "usr": "s:SQ",
            "mangledName": "$sSQ"
          },
          {
            "kind": "Conformance",
            "name": "Hashable",
            "printedName": "Hashable",
            "usr": "s:SH",
            "mangledName": "$sSH"
          },
          {
            "kind": "Conformance",
            "name": "RawRepresentable",
            "printedName": "RawRepresentable",
            "children": [
              {
                "kind": "TypeWitness",
                "name": "RawValue",
                "printedName": "RawValue",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Int",
                    "printedName": "Swift.Int",
                    "usr": "s:Si"
                  }
                ]
              }
            ],
            "usr": "s:SY",
            "mangledName": "$sSY"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "os.log",
        "printedName": "os.log",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer"
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "ProviderVerifying",
        "printedName": "ProviderVerifying",
        "children": [
          {
            "kind": "Function",
            "name": "verifyProvider",
            "printedName": "verifyProvider(options:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Result",
                "printedName": "Swift.Result<Swift.Bool, PactSwiftMockServer.ProviderVerificationError>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ProviderVerificationError",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError",
                    "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                  }
                ],
                "usr": "s:s6ResultO"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:19PactSwiftMockServer17ProviderVerifyingP06verifyE07optionss6ResultOySbAA0E17VerificationErrorOGSS_tF",
            "mangledName": "$s19PactSwiftMockServer17ProviderVerifyingP06verifyE07optionss6ResultOySbAA0E17VerificationErrorOGSS_tF",
            "moduleName": "PactSwiftMockServer",
            "genericSig": "<τ_0_0 where τ_0_0 : PactSwiftMockServer.ProviderVerifying>",
            "sugared_genericSig": "<Self where Self : PactSwiftMockServer.ProviderVerifying>",
            "protocolReq": true,
            "declAttributes": [
              "RawDocComment"
            ],
            "reqNewWitnessTableEntry": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Protocol",
        "usr": "s:19PactSwiftMockServer17ProviderVerifyingP",
        "mangledName": "$s19PactSwiftMockServer17ProviderVerifyingP",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "Verifier",
        "printedName": "Verifier",
        "children": [
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init()",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Verifier",
                "printedName": "PactSwiftMockServer.Verifier",
                "usr": "s:19PactSwiftMockServer8VerifierC"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:19PactSwiftMockServer8VerifierCACycfc",
            "mangledName": "$s19PactSwiftMockServer8VerifierCACycfc",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "AccessControl"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "verifyProvider",
            "printedName": "verifyProvider(options:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Result",
                "printedName": "Swift.Result<Swift.Bool, PactSwiftMockServer.ProviderVerificationError>",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Bool",
                    "printedName": "Swift.Bool",
                    "usr": "s:Sb"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "ProviderVerificationError",
                    "printedName": "PactSwiftMockServer.ProviderVerificationError",
                    "usr": "s:19PactSwiftMockServer25ProviderVerificationErrorO"
                  }
                ],
                "usr": "s:s6ResultO"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:19PactSwiftMockServer8VerifierC14verifyProvider7optionss6ResultOySbAA0G17VerificationErrorOGSS_tF",
            "mangledName": "$s19PactSwiftMockServer8VerifierC14verifyProvider7optionss6ResultOySbAA0G17VerificationErrorOGSS_tF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "Final",
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:19PactSwiftMockServer8VerifierC",
        "mangledName": "$s19PactSwiftMockServer8VerifierC",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "Final",
          "AccessControl",
          "RawDocComment"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "ProviderVerifying",
            "printedName": "ProviderVerifying",
            "usr": "s:19PactSwiftMockServer17ProviderVerifyingP",
            "mangledName": "$s19PactSwiftMockServer17ProviderVerifyingP"
          }
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "MockServer",
        "printedName": "MockServer",
        "children": [
          {
            "kind": "Var",
            "name": "baseUrl",
            "printedName": "baseUrl",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:19PactSwiftMockServer0cD0C7baseUrlSSvp",
            "mangledName": "$s19PactSwiftMockServer0cD0C7baseUrlSSvp",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:19PactSwiftMockServer0cD0C7baseUrlSSvg",
                "mangledName": "$s19PactSwiftMockServer0cD0C7baseUrlSSvg",
                "moduleName": "PactSwiftMockServer",
                "accessorKind": "get"
              }
            ]
          },
          {
            "kind": "Constructor",
            "name": "init",
            "printedName": "init(directory:merge:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "MockServer",
                "printedName": "PactSwiftMockServer.MockServer",
                "usr": "s:19PactSwiftMockServer0cD0C"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Foundation.URL?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "URL",
                    "printedName": "Foundation.URL",
                    "usr": "s:10Foundation3URLV"
                  }
                ],
                "hasDefaultArg": true,
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "Bool",
                "printedName": "Swift.Bool",
                "hasDefaultArg": true,
                "usr": "s:Sb"
              }
            ],
            "declKind": "Constructor",
            "usr": "s:19PactSwiftMockServer0cD0C9directory5mergeAC10Foundation3URLVSg_Sbtcfc",
            "mangledName": "$s19PactSwiftMockServer0cD0C9directory5mergeAC10Foundation3URLVSg_Sbtcfc",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "init_kind": "Designated"
          },
          {
            "kind": "Function",
            "name": "setup",
            "printedName": "setup(pact:protocol:completion:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "TransferProtocol",
                "printedName": "PactSwiftMockServer.TransferProtocol",
                "hasDefaultArg": true,
                "usr": "c:@M@PactSwiftMockServer@E@TransferProtocol"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Swift.Result<Swift.Int, PactSwiftMockServer.MockServerError>) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Result",
                    "printedName": "Swift.Result<Swift.Int, PactSwiftMockServer.MockServerError>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Int",
                        "printedName": "Swift.Int",
                        "usr": "s:Si"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "MockServerError",
                        "printedName": "PactSwiftMockServer.MockServerError",
                        "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                      }
                    ],
                    "usr": "s:s6ResultO"
                  }
                ],
                "typeAttributes": [
                  "noescape"
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:19PactSwiftMockServer0cD0C5setup4pact8protocol10completiony10Foundation4DataV_AA16TransferProtocolOys6ResultOySiAA0cD5ErrorOGXEtF",
            "mangledName": "$s19PactSwiftMockServer0cD0C5setup4pact8protocol10completiony10Foundation4DataV_AA16TransferProtocolOys6ResultOySiAA0cD5ErrorOGXEtF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "verify",
            "printedName": "verify(completion:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(Swift.Result<Swift.Bool, PactSwiftMockServer.VerificationError>) -> ()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "Void",
                    "printedName": "()"
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Result",
                    "printedName": "Swift.Result<Swift.Bool, PactSwiftMockServer.VerificationError>",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Bool",
                        "printedName": "Swift.Bool",
                        "usr": "s:Sb"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "VerificationError",
                        "printedName": "PactSwiftMockServer.VerificationError",
                        "usr": "s:19PactSwiftMockServer17VerificationErrorO"
                      }
                    ],
                    "usr": "s:s6ResultO"
                  }
                ],
                "typeAttributes": [
                  "noescape"
                ]
              }
            ],
            "declKind": "Func",
            "usr": "s:19PactSwiftMockServer0cD0C6verify10completionyys6ResultOySbAA17VerificationErrorOGXE_tF",
            "mangledName": "$s19PactSwiftMockServer0cD0C6verify10completionyys6ResultOySbAA17VerificationErrorOGXE_tF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "finalize",
            "printedName": "finalize(pact:completion:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Void",
                "printedName": "()"
              },
              {
                "kind": "TypeNominal",
                "name": "Data",
                "printedName": "Foundation.Data",
                "usr": "s:10Foundation4DataV"
              },
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "((Swift.Result<Swift.String, PactSwiftMockServer.MockServerError>) -> ())?",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.Result<Swift.String, PactSwiftMockServer.MockServerError>) -> ()",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "Void",
                        "printedName": "()"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "Result",
                        "printedName": "Swift.Result<Swift.String, PactSwiftMockServer.MockServerError>",
                        "children": [
                          {
                            "kind": "TypeNominal",
                            "name": "String",
                            "printedName": "Swift.String",
                            "usr": "s:SS"
                          },
                          {
                            "kind": "TypeNominal",
                            "name": "MockServerError",
                            "printedName": "PactSwiftMockServer.MockServerError",
                            "usr": "s:19PactSwiftMockServer0cD5ErrorO"
                          }
                        ],
                        "usr": "s:s6ResultO"
                      }
                    ]
                  }
                ],
                "usr": "s:Sq"
              }
            ],
            "declKind": "Func",
            "usr": "s:19PactSwiftMockServer0cD0C8finalize4pact10completiony10Foundation4DataV_ys6ResultOySSAA0cD5ErrorOGcSgtF",
            "mangledName": "$s19PactSwiftMockServer0cD0C8finalize4pact10completiony10Foundation4DataV_ys6ResultOySSAA0cD5ErrorOGcSgtF",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "AccessControl",
              "RawDocComment"
            ],
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "generate_value",
            "printedName": "generate_value(regex:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:19PactSwiftMockServer0cD0C14generate_value5regexSSSgSS_tFZ",
            "mangledName": "$s19PactSwiftMockServer0cD0C14generate_value5regexSSSgSS_tFZ",
            "moduleName": "PactSwiftMockServer",
            "static": true,
            "declAttributes": [
              "Final",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          },
          {
            "kind": "Function",
            "name": "generate_date",
            "printedName": "generate_date(format:)",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "Optional",
                "printedName": "Swift.String?",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "usr": "s:Sq"
              },
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Func",
            "usr": "s:19PactSwiftMockServer0cD0C13generate_date6formatSSSgSS_tFZ",
            "mangledName": "$s19PactSwiftMockServer0cD0C13generate_date6formatSSSgSS_tFZ",
            "moduleName": "PactSwiftMockServer",
            "static": true,
            "declAttributes": [
              "Final",
              "RawDocComment"
            ],
            "isFromExtension": true,
            "funcSelfKind": "NonMutating"
          }
        ],
        "declKind": "Class",
        "usr": "s:19PactSwiftMockServer0cD0C",
        "mangledName": "$s19PactSwiftMockServer0cD0C",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "AccessControl"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "StateHandler",
        "printedName": "StateHandler",
        "declKind": "Struct",
        "usr": "s:19PactSwiftMockServer12StateHandlerV",
        "mangledName": "$s19PactSwiftMockServer12StateHandlerV",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "AccessControl",
          "RawDocComment"
        ]
      },
      {
        "kind": "Import",
        "name": "Foundation",
        "printedName": "Foundation",
        "declKind": "Import",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "RawDocComment"
        ]
      },
      {
        "kind": "TypeDecl",
        "name": "VerificationError",
        "printedName": "VerificationError",
        "children": [
          {
            "kind": "Var",
            "name": "reason",
            "printedName": "reason",
            "children": [
              {
                "kind": "TypeFunc",
                "name": "Function",
                "printedName": "(PactSwiftMockServer.VerificationError.Type) -> (Swift.String) -> PactSwiftMockServer.VerificationError",
                "children": [
                  {
                    "kind": "TypeFunc",
                    "name": "Function",
                    "printedName": "(Swift.String) -> PactSwiftMockServer.VerificationError",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "VerificationError",
                        "printedName": "PactSwiftMockServer.VerificationError",
                        "usr": "s:19PactSwiftMockServer17VerificationErrorO"
                      },
                      {
                        "kind": "TypeNominal",
                        "name": "String",
                        "printedName": "Swift.String",
                        "usr": "s:SS"
                      }
                    ]
                  },
                  {
                    "kind": "TypeNominal",
                    "name": "Metatype",
                    "printedName": "PactSwiftMockServer.VerificationError.Type",
                    "children": [
                      {
                        "kind": "TypeNominal",
                        "name": "VerificationError",
                        "printedName": "PactSwiftMockServer.VerificationError",
                        "usr": "s:19PactSwiftMockServer17VerificationErrorO"
                      }
                    ]
                  }
                ]
              }
            ],
            "declKind": "EnumElement",
            "usr": "s:19PactSwiftMockServer17VerificationErrorO6reasonyACSScACmF",
            "mangledName": "$s19PactSwiftMockServer17VerificationErrorO6reasonyACSScACmF",
            "moduleName": "PactSwiftMockServer"
          },
          {
            "kind": "Var",
            "name": "description",
            "printedName": "description",
            "children": [
              {
                "kind": "TypeNominal",
                "name": "String",
                "printedName": "Swift.String",
                "usr": "s:SS"
              }
            ],
            "declKind": "Var",
            "usr": "s:19PactSwiftMockServer17VerificationErrorO11descriptionSSvp",
            "mangledName": "$s19PactSwiftMockServer17VerificationErrorO11descriptionSSvp",
            "moduleName": "PactSwiftMockServer",
            "declAttributes": [
              "AccessControl"
            ],
            "accessors": [
              {
                "kind": "Accessor",
                "name": "Get",
                "printedName": "Get()",
                "children": [
                  {
                    "kind": "TypeNominal",
                    "name": "String",
                    "printedName": "Swift.String",
                    "usr": "s:SS"
                  }
                ],
                "declKind": "Accessor",
                "usr": "s:19PactSwiftMockServer17VerificationErrorO11descriptionSSvg",
                "mangledName": "$s19PactSwiftMockServer17VerificationErrorO11descriptionSSvg",
                "moduleName": "PactSwiftMockServer",
                "accessorKind": "get"
              }
            ]
          }
        ],
        "declKind": "Enum",
        "usr": "s:19PactSwiftMockServer17VerificationErrorO",
        "mangledName": "$s19PactSwiftMockServer17VerificationErrorO",
        "moduleName": "PactSwiftMockServer",
        "declAttributes": [
          "AccessControl"
        ],
        "conformances": [
          {
            "kind": "Conformance",
            "name": "Error",
            "printedName": "Error",
            "usr": "s:s5ErrorP",
            "mangledName": "$ss5ErrorP"
          },
          {
            "kind": "Conformance",
            "name": "Sendable",
            "printedName": "Sendable",
            "usr": "s:s8SendableP",
            "mangledName": "$ss8SendableP"
          }
        ]
      }
    ],
    "json_format_version": 8
  },
  "ConstValues": [
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MismatchError.swift",
      "kind": "Array",
      "offset": 1412,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MismatchError.swift",
      "kind": "StringLiteral",
      "offset": 1525,
      "length": 7,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MismatchError.swift",
      "kind": "StringLiteral",
      "offset": 1531,
      "length": 23,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MismatchError.swift",
      "kind": "StringLiteral",
      "offset": 1553,
      "length": 3,
      "value": "\",\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MismatchError.swift",
      "kind": "Array",
      "offset": 1819,
      "length": 2,
      "value": "[]"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MismatchError.swift",
      "kind": "StringLiteral",
      "offset": 1926,
      "length": 7,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MismatchError.swift",
      "kind": "StringLiteral",
      "offset": 1932,
      "length": 23,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MismatchError.swift",
      "kind": "StringLiteral",
      "offset": 1954,
      "length": 3,
      "value": "\",\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 923,
      "length": 17,
      "value": "\"Missing request\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 958,
      "length": 20,
      "value": "\"Unexpected request\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 996,
      "length": 24,
      "value": "\"Request does not match\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 1053,
      "length": 206,
      "value": "\"Failed to parse Mock Server error response! Please report this as an issue at https:\/\/github.com\/surpher\/pact-swift\/issues\/new. Provide this test as an example to help us debug and improve this framework.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 1314,
      "length": 195,
      "value": "\"Not entirely sure what happened! Please report this as an issue at https:\/\/github.com\/surpher\/pact-swift\/issues\/new. Provide this test as an example to help us debug and improve this framework.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 1596,
      "length": 17,
      "value": "\"missing-request\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 1641,
      "length": 19,
      "value": "\"request-not-found\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 1689,
      "length": 18,
      "value": "\"request-mismatch\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 1736,
      "length": 26,
      "value": "\"mock-server-parsing-fail\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 923,
      "length": 17,
      "value": "\"Missing request\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 958,
      "length": 20,
      "value": "\"Unexpected request\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 996,
      "length": 24,
      "value": "\"Request does not match\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 1053,
      "length": 206,
      "value": "\"Failed to parse Mock Server error response! Please report this as an issue at https:\/\/github.com\/surpher\/pact-swift\/issues\/new. Provide this test as an example to help us debug and improve this framework.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorType.swift",
      "kind": "StringLiteral",
      "offset": 1314,
      "length": 195,
      "value": "\"Not entirely sure what happened! Please report this as an issue at https:\/\/github.com\/surpher\/pact-swift\/issues\/new. Provide this test as an example to help us debug and improve this framework.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/ProviderVerificationError.swift",
      "kind": "IntegerLiteral",
      "offset": 1460,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/ProviderVerificationError.swift",
      "kind": "IntegerLiteral",
      "offset": 1497,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/ProviderVerificationError.swift",
      "kind": "IntegerLiteral",
      "offset": 1527,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/ProviderVerificationError.swift",
      "kind": "IntegerLiteral",
      "offset": 1560,
      "length": 1,
      "value": "4"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/ProviderVerificationError.swift",
      "kind": "StringLiteral",
      "offset": 1744,
      "length": 57,
      "value": "\"The verification process failed, see output for errors.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/ProviderVerificationError.swift",
      "kind": "StringLiteral",
      "offset": 1842,
      "length": 30,
      "value": "\"A null pointer was received.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/ProviderVerificationError.swift",
      "kind": "StringLiteral",
      "offset": 1916,
      "length": 22,
      "value": "\"The method panicked.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/ProviderVerificationError.swift",
      "kind": "StringLiteral",
      "offset": 1984,
      "length": 62,
      "value": "\"Invalid arguments were provided to the verification process.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/ProviderVerificationError.swift",
      "kind": "StringLiteral",
      "offset": 2143,
      "length": 16,
      "value": "\"Unknown error!\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/ProviderVerificationError.swift",
      "kind": "StringLiteral",
      "offset": 2306,
      "length": 30,
      "value": "\"Provider Verification Error:\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/ProviderVerificationError.swift",
      "kind": "StringLiteral",
      "offset": 2365,
      "length": 3,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "IntegerLiteral",
      "offset": 1331,
      "length": 1,
      "value": "2"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "IntegerLiteral",
      "offset": 1367,
      "length": 1,
      "value": "3"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "IntegerLiteral",
      "offset": 1398,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "IntegerLiteral",
      "offset": 1429,
      "length": 2,
      "value": "-2"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "IntegerLiteral",
      "offset": 1464,
      "length": 2,
      "value": "-3"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "IntegerLiteral",
      "offset": 1497,
      "length": 1,
      "value": "1"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "IntegerLiteral",
      "offset": 1500,
      "length": 2,
      "value": "-4"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "IntegerLiteral",
      "offset": 1534,
      "length": 2,
      "value": "-5"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "IntegerLiteral",
      "offset": 1574,
      "length": 2,
      "value": "-6"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "IntegerLiteral",
      "offset": 1616,
      "length": 3,
      "value": "999"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 1828,
      "length": 32,
      "value": "\"Pact JSON could not be parsed.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 1910,
      "length": 28,
      "value": "\"Socket Address is invalid.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 1981,
      "length": 18,
      "value": "\"Could not start.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 2046,
      "length": 40,
      "value": "\"Failed to write Pact contract to file.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 2130,
      "length": 35,
      "value": "\"PactMockServer's method panicked.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 2206,
      "length": 60,
      "value": "\"Either Pact JSON or Socket Address passed as null pointer.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 2308,
      "length": 46,
      "value": "\"Mock Server with specified port not running.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 2406,
      "length": 73,
      "value": "\"Could not create the TLS configuration with the self-signed certificate\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 2526,
      "length": 63,
      "value": "\"Interactions failed to verify successfully. Check your tests.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 2626,
      "length": 17,
      "value": "\"Reason unknown!\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 2733,
      "length": 20,
      "value": "\"Mock Server Error:\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MockServerError.swift",
      "kind": "StringLiteral",
      "offset": 2782,
      "length": 3,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/TransferProtocol.swift",
      "kind": "IntegerLiteral",
      "offset": 1006,
      "length": 6,
      "value": "1"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/TransferProtocol.swift",
      "kind": "IntegerLiteral",
      "offset": 1006,
      "length": 6,
      "value": "1"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/TransferProtocol.swift",
      "kind": "StringLiteral",
      "offset": 1273,
      "length": 6,
      "value": "\"http\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/TransferProtocol.swift",
      "kind": "StringLiteral",
      "offset": 1303,
      "length": 7,
      "value": "\"https\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MismatchErrorType.swift",
      "kind": "StringLiteral",
      "offset": 1008,
      "length": 15,
      "value": "\"QueryMismatch\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MismatchErrorType.swift",
      "kind": "StringLiteral",
      "offset": 1046,
      "length": 18,
      "value": "\"BodyTypeMismatch\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/MismatchErrorType.swift",
      "kind": "StringLiteral",
      "offset": 1086,
      "length": 14,
      "value": "\"BodyMismatch\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/Logger.swift",
      "kind": "StringLiteral",
      "offset": 1322,
      "length": 21,
      "value": "\"PACT_ENABLE_LOGGING\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/Logger.swift",
      "kind": "StringLiteral",
      "offset": 1441,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/Logger.swift",
      "kind": "StringLiteral",
      "offset": 1518,
      "length": 24,
      "value": "\"PactSwift: %{private}s\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/Logger.swift",
      "kind": "StringLiteral",
      "offset": 1587,
      "length": 27,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/Logger.swift",
      "kind": "StringLiteral",
      "offset": 1598,
      "length": 1,
      "value": "\": \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/Logger.swift",
      "kind": "StringLiteral",
      "offset": 1613,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/Logger.swift",
      "kind": "StringLiteral",
      "offset": 1727,
      "length": 38,
      "value": "\"PactSwift: \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/Logger.swift",
      "kind": "StringLiteral",
      "offset": 1749,
      "length": 1,
      "value": "\"\n\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/Logger.swift",
      "kind": "StringLiteral",
      "offset": 1764,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/Logger.swift",
      "kind": "StringLiteral",
      "offset": 2002,
      "length": 5,
      "value": "\"all\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "IntegerLiteral",
      "offset": 2211,
      "length": 5,
      "value": "2000"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "IntegerLiteral",
      "offset": 2220,
      "length": 5,
      "value": "4000"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "IntegerLiteral",
      "offset": 2486,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "IntegerLiteral",
      "offset": 2521,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "BooleanLiteral",
      "offset": 2542,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "StringLiteral",
      "offset": 2549,
      "length": 51,
      "value": "\"SocketCreationFailed: \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "StringLiteral",
      "offset": 2599,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "StringLiteral",
      "offset": 2905,
      "length": 9,
      "value": "\"0.0.0.0\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "IntegerLiteral",
      "offset": 3128,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "BooleanLiteral",
      "offset": 3227,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "StringLiteral",
      "offset": 3234,
      "length": 33,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "StringLiteral",
      "offset": 3242,
      "length": 1,
      "value": "\", BindFailed, \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "StringLiteral",
      "offset": 3266,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "IntegerLiteral",
      "offset": 3323,
      "length": 2,
      "value": "-1"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "BooleanLiteral",
      "offset": 3422,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "StringLiteral",
      "offset": 3429,
      "length": 35,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "StringLiteral",
      "offset": 3437,
      "length": 1,
      "value": "\", ListenFailed, \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "StringLiteral",
      "offset": 3463,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "BooleanLiteral",
      "offset": 3521,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "StringLiteral",
      "offset": 3527,
      "length": 25,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/SocketBinder.swift",
      "kind": "StringLiteral",
      "offset": 3535,
      "length": 2,
      "value": "\" is free for use\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Verifier.swift",
      "kind": "StringLiteral",
      "offset": 1638,
      "length": 21,
      "value": "\"VerificationOptions\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Verifier.swift",
      "kind": "IntegerLiteral",
      "offset": 1815,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Verifier.swift",
      "kind": "BooleanLiteral",
      "offset": 1960,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/PactFileManager.swift",
      "kind": "StringLiteral",
      "offset": 1966,
      "length": 17,
      "value": "\"PACT_OUTPUT_DIR\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/PactFileManager.swift",
      "kind": "StringLiteral",
      "offset": 1988,
      "length": 12,
      "value": "\"\/tmp\/pacts\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/PactFileManager.swift",
      "kind": "BooleanLiteral",
      "offset": 2310,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/PactFileManager.swift",
      "kind": "BooleanLiteral",
      "offset": 2421,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/PactFileManager.swift",
      "kind": "StringLiteral",
      "offset": 2493,
      "length": 83,
      "value": "\"Directory \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/PactFileManager.swift",
      "kind": "StringLiteral",
      "offset": 2523,
      "length": 5,
      "value": "\" could not be created! \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/PactFileManager.swift",
      "kind": "StringLiteral",
      "offset": 2575,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/PactFileManager.swift",
      "kind": "BooleanLiteral",
      "offset": 2589,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/PactFileManager.swift",
      "kind": "BooleanLiteral",
      "offset": 2613,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/PactFileManager.swift",
      "kind": "BooleanLiteral",
      "offset": 2753,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Toolbox\/PactFileManager.swift",
      "kind": "StringLiteral",
      "offset": 2910,
      "length": 26,
      "value": "\"APP_SANDBOX_CONTAINER_ID\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 1045,
      "length": 57,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 1074,
      "length": 1,
      "value": "\":\/\/\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 1093,
      "length": 1,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 1101,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 1136,
      "length": 11,
      "value": "\"127.0.0.1\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "IntegerLiteral",
      "offset": 1223,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "BooleanLiteral",
      "offset": 1342,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "BooleanLiteral",
      "offset": 1349,
      "length": 5,
      "value": "false"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "BooleanLiteral",
      "offset": 1719,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 2270,
      "length": 55,
      "value": "\"Setting up pact mock server for consumer verification\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 2394,
      "length": 51,
      "value": "\"Starting up mock server for pact interaction test\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "IntegerLiteral",
      "offset": 2501,
      "length": 5,
      "value": "1200"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 2606,
      "length": 37,
      "value": "\"Mock server started on port \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 2642,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "BooleanLiteral",
      "offset": 3241,
      "length": 4,
      "value": "true"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 3598,
      "length": 61,
      "value": "\"Starting up mock server to finalize writing pact with data:\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 3731,
      "length": 44,
      "value": "\"Starting mock server on port \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 3774,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "IntegerLiteral",
      "offset": 3849,
      "length": 5,
      "value": "1200"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 3958,
      "length": 79,
      "value": "\"Mock server started on port \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 3994,
      "length": 1,
      "value": "\". Attempting to write pact file with data:\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 5993,
      "length": 79,
      "value": "\"No response! There might be something fishy going on with your Mock Server...\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 6608,
      "length": 39,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 6625,
      "length": 1,
      "value": "\":\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 6646,
      "length": 7,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 6936,
      "length": 128,
      "value": "\"Writing pact contract in \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 6977,
      "length": 5,
      "value": "\" using mock server on port: \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 7025,
      "length": 1,
      "value": "\". Overwrite flag set to \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 7062,
      "length": 1,
      "value": "\".\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "IntegerLiteral",
      "offset": 7180,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 7291,
      "length": 33,
      "value": "\"Pact written to \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 7323,
      "length": 3,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "IntegerLiteral",
      "offset": 7488,
      "length": 1,
      "value": "0"
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 7515,
      "length": 43,
      "value": "\"Shutting down mock server on port \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 7557,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/MockServer.swift",
      "kind": "StringLiteral",
      "offset": 7818,
      "length": 41,
      "value": "\"None or invalid directory URL provided.\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1116,
      "length": 49,
      "value": "\"[{\"type\":\"Unsupported Pact Error Message\"}]\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1237,
      "length": 26,
      "value": "\"mock-server-parsing-fail\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1273,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1283,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1386,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1419,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1450,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1676,
      "length": 31,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1692,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1706,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1729,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1774,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1798,
      "length": 31,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1814,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1828,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1974,
      "length": 41,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 1993,
      "length": 19,
      "value": "\"unknown_parameter\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2013,
      "length": 1,
      "value": "\"=\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2018,
      "length": 31,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2048,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2102,
      "length": 3,
      "value": "\"&\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2166,
      "length": 71,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2191,
      "length": 15,
      "value": "\"query param '\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2225,
      "length": 5,
      "value": "\"': \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2233,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2236,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2245,
      "length": 43,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2284,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2287,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2296,
      "length": 113,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2349,
      "length": 53,
      "value": "\" - Body does not match the expected body definition\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2405,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2408,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2439,
      "length": 6,
      "value": "\"\n\t\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2471,
      "length": 92,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2487,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2501,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2522,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2536,
      "length": 3,
      "value": "\"?\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2559,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2562,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2585,
      "length": 79,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2601,
      "length": 1,
      "value": "\" \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2615,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2637,
      "length": 6,
      "value": "\"\n\t\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2660,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2663,
      "length": 1,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2700,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2724,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2746,
      "length": 235,
      "value": "\"Actual request does not match expected interactions...\n\nReason:\n\t\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2835,
      "length": 1,
      "value": "\"\n\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2867,
      "length": 17,
      "value": "\"\nExpected:\n\t\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2905,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2908,
      "length": 1,
      "value": "\"\n\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2938,
      "length": 15,
      "value": "\"\nActual:\n\t\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2972,
      "length": 2,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationErrorHandler.swift",
      "kind": "StringLiteral",
      "offset": 2975,
      "length": 10,
      "value": "\"\""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationError.swift",
      "kind": "StringLiteral",
      "offset": 1017,
      "length": 35,
      "value": "\"Failed to verify Pact! \""
    },
    {
      "filePath": "\/Users\/marko\/Developer\/pact-foundation\/PactSwiftMockServer\/Sources\/Model\/VerificationError.swift",
      "kind": "StringLiteral",
      "offset": 1051,
      "length": 1,
      "value": "\"\""
    }
  ]
}